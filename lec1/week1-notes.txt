- Pattern matching
iex> x = 1   # match operator; matches by binding x to 1
iex> 1 = x   # OK, matches
iex> 2 = x   # MatchError
iex> x = 2   # OK, x bound to a new value
iex> ^x = 3  # MatchError; pin operator
 * result of match expression is result of right-side term

- atoms, e.g., :hello
  * boolean values are atoms
    :true/:false (can also be referenced as true/false)
  * nil/:nil 

- tuples, e.g., {:hello, 1}, {{:hello, :world}, 1}

- lists, e.g., [:hello, 1, [3.2, 1], {1,3}]
  [h|t] = [1,2,3]  # h is 1, t is [2, 3]
  [x, _, x, 3 | _] = [2, 5, 2, 3, 6, 4]   # x is 2

- named functions must be inside modules

- control flow
  if ... do ... else ... end

  case ... do
    <pattern1> -> <expr1>
    ....
  end

  cond do
    <cond1> -> <expr1>
    ...
  end

